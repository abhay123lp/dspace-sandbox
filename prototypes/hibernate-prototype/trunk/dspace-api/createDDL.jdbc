CREATE TABLE checksum_results (result_code VARCHAR(255) NOT NULL, result_description VARCHAR(255), PRIMARY KEY (result_code))
CREATE TABLE epersongroup2eperson (Group_ID INTEGER NOT NULL, members_ID INTEGER NOT NULL, PRIMARY KEY (Group_ID, members_ID))
CREATE TABLE EPERSONMETADATA (ID  SERIAL NOT NULL, FIELD VARCHAR(255), VALUE VARCHAR(255), EPERSON_ID INTEGER, PRIMARY KEY (ID))
CREATE TABLE item2metadatavalue (Item_ID INTEGER NOT NULL, metadata_ID INTEGER NOT NULL, PRIMARY KEY (Item_ID, metadata_ID))
CREATE TABLE communities2item (ID  SERIAL NOT NULL, item_id INTEGER, community_id INTEGER, PRIMARY KEY (ID))
CREATE TABLE WORKFLOWITEM (workflow_id  SERIAL NOT NULL, state INTEGER, multiple_files BOOLEAN, published_before BOOLEAN, multiple_titles BOOLEAN, ITEM_ID INTEGER, owner INTEGER, COLLECTION_ID INTEGER, PRIMARY KEY (workflow_id))
CREATE TABLE COLLECTION (ID INTEGER NOT NULL, license VARCHAR(255), ADMINISTRATORS_ID INTEGER, TEMPLATEITEM_ID INTEGER, SUBMITTERS_ID INTEGER, LOGO_ID INTEGER, PRIMARY KEY (ID))
CREATE TABLE community_item_count (ID INTEGER NOT NULL, count INTEGER, PRIMARY KEY (ID))
CREATE TABLE epersongroup (ID INTEGER NOT NULL, NAME VARCHAR(255), PRIMARY KEY (ID))
CREATE TABLE bi_metadata_map (MetadataIndexEntry_map_id INTEGER NOT NULL, items_ID INTEGER NOT NULL, PRIMARY KEY (MetadataIndexEntry_map_id, items_ID))
CREATE TABLE RESOURCEPOLICY (policy_id  SERIAL NOT NULL, start_date DATE, end_date DATE, resource_type_id INTEGER, action_id INTEGER, eperson_id INTEGER, epersongroup_id INTEGER, resource INTEGER, PRIMARY KEY (policy_id))
CREATE TABLE collection_item_count (ID INTEGER NOT NULL, count INTEGER, PRIMARY KEY (ID))
CREATE TABLE COMMUNITY (ID INTEGER NOT NULL, LOGO_ID INTEGER, PRIMARY KEY (ID))
CREATE TABLE EPERSON (ID INTEGER NOT NULL, self_registered BOOLEAN, can_log_in BOOLEAN, require_certificate BOOLEAN, PRIMARY KEY (ID))
CREATE TABLE ITEM (ID INTEGER NOT NULL, in_archive BOOLEAN, withdrawn BOOLEAN, last_modified DATE, owning_collection_id INTEGER, SUBMITTER_ID INTEGER, PRIMARY KEY (ID))
CREATE TABLE REGISTRATIONDATA (registrationdata_id  SERIAL NOT NULL, token VARCHAR(255), email VARCHAR(255), PRIMARY KEY (registrationdata_id))
CREATE TABLE group2group (parentGroups_ID INTEGER NOT NULL, groups_ID INTEGER NOT NULL, PRIMARY KEY (parentGroups_ID, groups_ID))
CREATE TABLE community2community (parentCommunities_ID INTEGER NOT NULL, subCommunities_ID INTEGER NOT NULL, PRIMARY KEY (parentCommunities_ID, subCommunities_ID))
CREATE TABLE community2collection (collections_ID INTEGER NOT NULL, communities_ID INTEGER NOT NULL, PRIMARY KEY (collections_ID, communities_ID))
CREATE TABLE COMMUNITYMETADATA (ID INTEGER NOT NULL, FIELD VARCHAR(255), VALUE VARCHAR(255), COMMUNITY_ID INTEGER, PRIMARY KEY (ID))
CREATE TABLE checksum_history (check_id  SERIAL NOT NULL, checksum_expected VARCHAR(255), result VARCHAR(255), process_end_date DATE, checksum_calculated VARCHAR(255), process_start_date DATE, bitstream_id INTEGER, PRIMARY KEY (check_id))
CREATE TABLE WORKSPACEITEM (workspace_item_id  SERIAL NOT NULL, multiple_files BOOLEAN, multiple_titles BOOLEAN, page_reached INTEGER, stage_reached INTEGER, published_before BOOLEAN, ITEM_ID INTEGER, COLLECTION_ID INTEGER, PRIMARY KEY (workspace_item_id))
CREATE TABLE BUNDLE (ID INTEGER NOT NULL, name VARCHAR(255), ITEM_ID INTEGER, primary_bitstream_id INTEGER, PRIMARY KEY (ID))
CREATE TABLE METADATAVALUE (ID INTEGER NOT NULL, text_value VARCHAR(255), text_lang VARCHAR(255), place INTEGER, ITEM_ID INTEGER, metadata_field_id INTEGER, PRIMARY KEY (ID))
CREATE TABLE bitstreamformatregistry (ID  SERIAL NOT NULL, internal BOOLEAN, description VARCHAR(255), support_level INTEGER, short_description VARCHAR(255), mimetype VARCHAR(255), PRIMARY KEY (ID))
CREATE TABLE metadatafieldregistry (ID INTEGER NOT NULL, qualifier VARCHAR(255), element VARCHAR(255), scope_note VARCHAR(255), metadata_schema_id INTEGER, PRIMARY KEY (ID))
CREATE TABLE FILEEXTENSION (file_extension_id  SERIAL NOT NULL, extension VARCHAR(255), bitstream_format_id INTEGER, PRIMARY KEY (file_extension_id))
CREATE TABLE DSPACEOBJECT (ID  SERIAL NOT NULL, DTYPE VARCHAR(31), PRIMARY KEY (ID))
CREATE TABLE item2collections (collections_ID INTEGER NOT NULL, items_ID INTEGER NOT NULL, PRIMARY KEY (collections_ID, items_ID))
CREATE TABLE TASKLISTITEM (tasklist_id  SERIAL NOT NULL, eperson_id INTEGER, workflow_id INTEGER, PRIMARY KEY (tasklist_id))
CREATE TABLE BITSTREAM (ID INTEGER NOT NULL, deleted BOOLEAN, sequence_id INTEGER, name VARCHAR(255), checksum_algorithm VARCHAR(255), size_bytes BIGINT, store_number INTEGER, source VARCHAR(255), checksum VARCHAR(255), description VARCHAR(255), internal_id VARCHAR(255), user_format_description VARCHAR(255), bitstream_format_id INTEGER, BUNDLE_ID INTEGER, PRIMARY KEY (ID))
CREATE TABLE bi_metadata_index_distinct (map_id  SERIAL NOT NULL, value VARCHAR(255), sort_value VARCHAR(255), index_number INTEGER, PRIMARY KEY (map_id))
CREATE TABLE bi_item_index (ID  SERIAL NOT NULL, index_number INTEGER, item_withdrawn BOOLEAN, sort_value VARCHAR(255), item_id INTEGER, PRIMARY KEY (ID))
CREATE TABLE SUBSCRIPTION (subscription_id  SERIAL NOT NULL, UUID BYTEA, eperson_id INTEGER, collection_id INTEGER, PRIMARY KEY (subscription_id))
CREATE TABLE metadataschemaregistry (ID INTEGER NOT NULL, short_id VARCHAR(255), namespace VARCHAR(255), PRIMARY KEY (ID))
CREATE TABLE collection2epersongroup (Collection_ID INTEGER NOT NULL, workflowGroups_ID INTEGER NOT NULL, PRIMARY KEY (Collection_ID, workflowGroups_ID))
CREATE TABLE most_recent_checksum (ID INTEGER NOT NULL, current_checksum VARCHAR(255), last_process_start_date DATE, checksum_algorithm VARCHAR(255), last_process_end_date DATE, expected_checksum VARCHAR(255), matched_prev_checksum BOOLEAN, to_be_processed BOOLEAN, result VARCHAR(255), bitstream_id INTEGER, PRIMARY KEY (ID))
CREATE TABLE COLLECTIONMETADATA (ID  SERIAL NOT NULL, FIELD VARCHAR(255), VALUE VARCHAR(255), COLLECTION_ID INTEGER, PRIMARY KEY (ID))
ALTER TABLE EPERSONMETADATA ADD CONSTRAINT UNQ_EPERSONMETADATA_0 UNIQUE (eperson_id, field)
ALTER TABLE COMMUNITYMETADATA ADD CONSTRAINT UNQ_COMMUNITYMETADATA_0 UNIQUE (community_id, field)
ALTER TABLE bi_metadata_index_distinct ADD CONSTRAINT UNQ_bi_metadata_index_distinct_0 UNIQUE (value)
ALTER TABLE most_recent_checksum ADD CONSTRAINT UNQ_most_recent_checksum_0 UNIQUE (bitstream)
ALTER TABLE COLLECTIONMETADATA ADD CONSTRAINT UNQ_COLLECTIONMETADATA_0 UNIQUE (collection_id, field)
ALTER TABLE epersongroup2eperson ADD CONSTRAINT FK_epersongroup2eperson_Group_ID FOREIGN KEY (Group_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE epersongroup2eperson ADD CONSTRAINT FK_epersongroup2eperson_members_ID FOREIGN KEY (members_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE EPERSONMETADATA ADD CONSTRAINT FK_EPERSONMETADATA_EPERSON_ID FOREIGN KEY (EPERSON_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE item2metadatavalue ADD CONSTRAINT FK_item2metadatavalue_Item_ID FOREIGN KEY (Item_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE item2metadatavalue ADD CONSTRAINT FK_item2metadatavalue_metadata_ID FOREIGN KEY (metadata_ID) REFERENCES METADATAVALUE (ID)
ALTER TABLE communities2item ADD CONSTRAINT FK_communities2item_community_id FOREIGN KEY (community_id) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE communities2item ADD CONSTRAINT FK_communities2item_item_id FOREIGN KEY (item_id) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE WORKFLOWITEM ADD CONSTRAINT FK_WORKFLOWITEM_owner FOREIGN KEY (owner) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE WORKFLOWITEM ADD CONSTRAINT FK_WORKFLOWITEM_COLLECTION_ID FOREIGN KEY (COLLECTION_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE WORKFLOWITEM ADD CONSTRAINT FK_WORKFLOWITEM_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE COLLECTION ADD CONSTRAINT FK_COLLECTION_SUBMITTERS_ID FOREIGN KEY (SUBMITTERS_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE COLLECTION ADD CONSTRAINT FK_COLLECTION_ID FOREIGN KEY (ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE COLLECTION ADD CONSTRAINT FK_COLLECTION_TEMPLATEITEM_ID FOREIGN KEY (TEMPLATEITEM_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE COLLECTION ADD CONSTRAINT FK_COLLECTION_ADMINISTRATORS_ID FOREIGN KEY (ADMINISTRATORS_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE COLLECTION ADD CONSTRAINT FK_COLLECTION_LOGO_ID FOREIGN KEY (LOGO_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE community_item_count ADD CONSTRAINT FK_community_item_count_ID FOREIGN KEY (ID) REFERENCES COMMUNITY (ID)
ALTER TABLE epersongroup ADD CONSTRAINT FK_epersongroup_ID FOREIGN KEY (ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE bi_metadata_map ADD CONSTRAINT FK_bi_metadata_map_items_ID FOREIGN KEY (items_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE bi_metadata_map ADD CONSTRAINT FK_bi_metadata_map_MetadataIndexEntry_map_id FOREIGN KEY (MetadataIndexEntry_map_id) REFERENCES bi_metadata_index_distinct (map_id)
ALTER TABLE RESOURCEPOLICY ADD CONSTRAINT FK_RESOURCEPOLICY_resource FOREIGN KEY (resource) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE collection_item_count ADD CONSTRAINT FK_collection_item_count_ID FOREIGN KEY (ID) REFERENCES COLLECTION (ID)
ALTER TABLE COMMUNITY ADD CONSTRAINT FK_COMMUNITY_LOGO_ID FOREIGN KEY (LOGO_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE COMMUNITY ADD CONSTRAINT FK_COMMUNITY_ID FOREIGN KEY (ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE EPERSON ADD CONSTRAINT FK_EPERSON_ID FOREIGN KEY (ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE ITEM ADD CONSTRAINT FK_ITEM_SUBMITTER_ID FOREIGN KEY (SUBMITTER_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE ITEM ADD CONSTRAINT FK_ITEM_owning_collection_id FOREIGN KEY (owning_collection_id) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE ITEM ADD CONSTRAINT FK_ITEM_ID FOREIGN KEY (ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE group2group ADD CONSTRAINT FK_group2group_groups_ID FOREIGN KEY (groups_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE group2group ADD CONSTRAINT FK_group2group_parentGroups_ID FOREIGN KEY (parentGroups_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE community2community ADD CONSTRAINT FK_community2community_subCommunities_ID FOREIGN KEY (subCommunities_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE community2community ADD CONSTRAINT FK_community2community_parentCommunities_ID FOREIGN KEY (parentCommunities_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE community2collection ADD CONSTRAINT FK_community2collection_collections_ID FOREIGN KEY (collections_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE community2collection ADD CONSTRAINT FK_community2collection_communities_ID FOREIGN KEY (communities_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE COMMUNITYMETADATA ADD CONSTRAINT FK_COMMUNITYMETADATA_COMMUNITY_ID FOREIGN KEY (COMMUNITY_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE WORKSPACEITEM ADD CONSTRAINT FK_WORKSPACEITEM_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE WORKSPACEITEM ADD CONSTRAINT FK_WORKSPACEITEM_COLLECTION_ID FOREIGN KEY (COLLECTION_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE BUNDLE ADD CONSTRAINT FK_BUNDLE_ID FOREIGN KEY (ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE BUNDLE ADD CONSTRAINT FK_BUNDLE_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE BUNDLE ADD CONSTRAINT FK_BUNDLE_primary_bitstream_id FOREIGN KEY (primary_bitstream_id) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE METADATAVALUE ADD CONSTRAINT FK_METADATAVALUE_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE METADATAVALUE ADD CONSTRAINT FK_METADATAVALUE_metadata_field_id FOREIGN KEY (metadata_field_id) REFERENCES metadatafieldregistry (ID)
ALTER TABLE metadatafieldregistry ADD CONSTRAINT FK_metadatafieldregistry_metadata_schema_id FOREIGN KEY (metadata_schema_id) REFERENCES metadataschemaregistry (ID)
ALTER TABLE FILEEXTENSION ADD CONSTRAINT FK_FILEEXTENSION_bitstream_format_id FOREIGN KEY (bitstream_format_id) REFERENCES bitstreamformatregistry (ID)
ALTER TABLE item2collections ADD CONSTRAINT FK_item2collections_items_ID FOREIGN KEY (items_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE item2collections ADD CONSTRAINT FK_item2collections_collections_ID FOREIGN KEY (collections_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE TASKLISTITEM ADD CONSTRAINT FK_TASKLISTITEM_workflow_id FOREIGN KEY (workflow_id) REFERENCES WORKFLOWITEM (workflow_id)
ALTER TABLE TASKLISTITEM ADD CONSTRAINT FK_TASKLISTITEM_eperson_id FOREIGN KEY (eperson_id) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE BITSTREAM ADD CONSTRAINT FK_BITSTREAM_bitstream_format_id FOREIGN KEY (bitstream_format_id) REFERENCES bitstreamformatregistry (ID)
ALTER TABLE BITSTREAM ADD CONSTRAINT FK_BITSTREAM_ID FOREIGN KEY (ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE BITSTREAM ADD CONSTRAINT FK_BITSTREAM_BUNDLE_ID FOREIGN KEY (BUNDLE_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE bi_item_index ADD CONSTRAINT FK_bi_item_index_item_id FOREIGN KEY (item_id) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE SUBSCRIPTION ADD CONSTRAINT FK_SUBSCRIPTION_eperson_id FOREIGN KEY (eperson_id) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE SUBSCRIPTION ADD CONSTRAINT FK_SUBSCRIPTION_collection_id FOREIGN KEY (collection_id) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE collection2epersongroup ADD CONSTRAINT FK_collection2epersongroup_workflowGroups_ID FOREIGN KEY (workflowGroups_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE collection2epersongroup ADD CONSTRAINT FK_collection2epersongroup_Collection_ID FOREIGN KEY (Collection_ID) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE most_recent_checksum ADD CONSTRAINT FK_most_recent_checksum_bitstream_id FOREIGN KEY (bitstream_id) REFERENCES DSPACEOBJECT (ID)
ALTER TABLE COLLECTIONMETADATA ADD CONSTRAINT FK_COLLECTIONMETADATA_COLLECTION_ID FOREIGN KEY (COLLECTION_ID) REFERENCES DSPACEOBJECT (ID)
CREATE TABLE SEQUENCE (SEQ_NAME VARCHAR(50) NOT NULL, SEQ_COUNT DECIMAL(38), PRIMARY KEY (SEQ_NAME))
INSERT INTO SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('SEQ_GEN', 1)
