CREATE TABLE community2community (parentCommunities_ID INTEGER NOT NULL, subCommunities_ID INTEGER NOT NULL, PRIMARY KEY (parentCommunities_ID, subCommunities_ID))
CREATE TABLE COMMUNITYMETADATA (ID INTEGER NOT NULL, FIELD VARCHAR(255), VALUE VARCHAR(255), COMMUNITY_ID INTEGER, PRIMARY KEY (ID))
CREATE TABLE collection2communities (collections_ID INTEGER NOT NULL, communities_ID INTEGER NOT NULL, PRIMARY KEY (collections_ID, communities_ID))
CREATE TABLE epersongroup2eperson (Group_ID INTEGER NOT NULL, members_ID INTEGER NOT NULL, PRIMARY KEY (Group_ID, members_ID))
CREATE TABLE EPERSONMETADATA (ID  SERIAL NOT NULL, FIELD VARCHAR(255), VALUE VARCHAR(255), EPERSON_ID INTEGER, PRIMARY KEY (ID))
CREATE TABLE BUNDLE (ID  SERIAL NOT NULL, name VARCHAR(255), ITEM_ID INTEGER, primary_bitstream_id INTEGER, PRIMARY KEY (ID))
CREATE TABLE METADATAVALUE (ID INTEGER NOT NULL, text_value VARCHAR(255), text_lang VARCHAR(255), place INTEGER, ITEM_ID INTEGER, metadata_field_id INTEGER, PRIMARY KEY (ID))
CREATE TABLE bitstreamformatregistry (ID  SERIAL NOT NULL, support_level INTEGER, mimetype VARCHAR(255), description VARCHAR(255), internal BOOLEAN, short_description VARCHAR(255), PRIMARY KEY (ID))
CREATE TABLE item2metadatavalue (Item_ID INTEGER NOT NULL, metadata_ID INTEGER NOT NULL, PRIMARY KEY (Item_ID, metadata_ID))
CREATE TABLE metadatafieldregistry (ID INTEGER NOT NULL, qualifier VARCHAR(255), element VARCHAR(255), scope_note VARCHAR(255), metadata_schema_id INTEGER, PRIMARY KEY (ID))
CREATE TABLE SITE (ID  SERIAL NOT NULL, name VARCHAR(255), LOGO_ID INTEGER, PRIMARY KEY (ID))
CREATE TABLE COLLECTION (ID  SERIAL NOT NULL, license VARCHAR(255), ADMINISTRATORS_ID INTEGER, TEMPLATEITEM_ID INTEGER, SUBMITTERS_ID INTEGER, LOGO_ID INTEGER, PRIMARY KEY (ID))
CREATE TABLE epersongroup (ID  SERIAL NOT NULL, NAME VARCHAR(255), PRIMARY KEY (ID))
CREATE TABLE item2collections (collections_ID INTEGER NOT NULL, items_ID INTEGER NOT NULL, PRIMARY KEY (collections_ID, items_ID))
CREATE TABLE BITSTREAM (ID  SERIAL NOT NULL, deleted BOOLEAN, name VARCHAR(255), checksum VARCHAR(255), size_bytes BIGINT, user_format_description VARCHAR(255), source VARCHAR(255), internal_id VARCHAR(255), description VARCHAR(255), checksum_algorithm VARCHAR(255), sequence_id INTEGER, store_number INTEGER, BUNDLE_ID INTEGER, bitstream_format_id INTEGER, FORMAT_ID INTEGER, PRIMARY KEY (ID))
CREATE TABLE COMMUNITY (ID  SERIAL NOT NULL, LOGO_ID INTEGER, PRIMARY KEY (ID))
CREATE TABLE metadataschemaregistry (ID INTEGER NOT NULL, namespace VARCHAR(255), PRIMARY KEY (ID))
CREATE TABLE collection2epersongroup (Collection_ID INTEGER NOT NULL, workflowGroups_ID INTEGER NOT NULL, PRIMARY KEY (Collection_ID, workflowGroups_ID))
CREATE TABLE ITEM (ID  SERIAL NOT NULL, in_archive BOOLEAN, withdrawn BOOLEAN, last_modified DATE, owning_collection_id INTEGER, SUBMITTER_ID INTEGER, PRIMARY KEY (ID))
CREATE TABLE EPERSON (ID  SERIAL NOT NULL, self_registered BOOLEAN, can_log_in BOOLEAN, require_certificate BOOLEAN, PRIMARY KEY (ID))
CREATE TABLE COLLECTIONMETADATA (ID  SERIAL NOT NULL, FIELD VARCHAR(255), VALUE VARCHAR(255), COLLECTION_ID INTEGER, PRIMARY KEY (ID))
ALTER TABLE COMMUNITYMETADATA ADD CONSTRAINT UNQ_COMMUNITYMETADATA_0 UNIQUE (community_id, field)
ALTER TABLE EPERSONMETADATA ADD CONSTRAINT UNQ_EPERSONMETADATA_0 UNIQUE (eperson_id, field)
ALTER TABLE COLLECTIONMETADATA ADD CONSTRAINT UNQ_COLLECTIONMETADATA_0 UNIQUE (collection_id, field)
ALTER TABLE community2community ADD CONSTRAINT FK_community2community_subCommunities_ID FOREIGN KEY (subCommunities_ID) REFERENCES COMMUNITY (ID)
ALTER TABLE community2community ADD CONSTRAINT FK_community2community_parentCommunities_ID FOREIGN KEY (parentCommunities_ID) REFERENCES COMMUNITY (ID)
ALTER TABLE COMMUNITYMETADATA ADD CONSTRAINT FK_COMMUNITYMETADATA_COMMUNITY_ID FOREIGN KEY (COMMUNITY_ID) REFERENCES COMMUNITY (ID)
ALTER TABLE collection2communities ADD CONSTRAINT FK_collection2communities_collections_ID FOREIGN KEY (collections_ID) REFERENCES COLLECTION (ID)
ALTER TABLE collection2communities ADD CONSTRAINT FK_collection2communities_communities_ID FOREIGN KEY (communities_ID) REFERENCES COMMUNITY (ID)
ALTER TABLE epersongroup2eperson ADD CONSTRAINT FK_epersongroup2eperson_Group_ID FOREIGN KEY (Group_ID) REFERENCES epersongroup (ID)
ALTER TABLE epersongroup2eperson ADD CONSTRAINT FK_epersongroup2eperson_members_ID FOREIGN KEY (members_ID) REFERENCES EPERSON (ID)
ALTER TABLE EPERSONMETADATA ADD CONSTRAINT FK_EPERSONMETADATA_EPERSON_ID FOREIGN KEY (EPERSON_ID) REFERENCES EPERSON (ID)
ALTER TABLE BUNDLE ADD CONSTRAINT FK_BUNDLE_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES ITEM (ID)
ALTER TABLE BUNDLE ADD CONSTRAINT FK_BUNDLE_primary_bitstream_id FOREIGN KEY (primary_bitstream_id) REFERENCES BITSTREAM (ID)
ALTER TABLE METADATAVALUE ADD CONSTRAINT FK_METADATAVALUE_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES ITEM (ID)
ALTER TABLE METADATAVALUE ADD CONSTRAINT FK_METADATAVALUE_metadata_field_id FOREIGN KEY (metadata_field_id) REFERENCES metadatafieldregistry (ID)
ALTER TABLE item2metadatavalue ADD CONSTRAINT FK_item2metadatavalue_Item_ID FOREIGN KEY (Item_ID) REFERENCES ITEM (ID)
ALTER TABLE item2metadatavalue ADD CONSTRAINT FK_item2metadatavalue_metadata_ID FOREIGN KEY (metadata_ID) REFERENCES METADATAVALUE (ID)
ALTER TABLE metadatafieldregistry ADD CONSTRAINT FK_metadatafieldregistry_metadata_schema_id FOREIGN KEY (metadata_schema_id) REFERENCES metadataschemaregistry (ID)
ALTER TABLE SITE ADD CONSTRAINT FK_SITE_LOGO_ID FOREIGN KEY (LOGO_ID) REFERENCES BITSTREAM (ID)
ALTER TABLE COLLECTION ADD CONSTRAINT FK_COLLECTION_SUBMITTERS_ID FOREIGN KEY (SUBMITTERS_ID) REFERENCES epersongroup (ID)
ALTER TABLE COLLECTION ADD CONSTRAINT FK_COLLECTION_TEMPLATEITEM_ID FOREIGN KEY (TEMPLATEITEM_ID) REFERENCES ITEM (ID)
ALTER TABLE COLLECTION ADD CONSTRAINT FK_COLLECTION_ADMINISTRATORS_ID FOREIGN KEY (ADMINISTRATORS_ID) REFERENCES epersongroup (ID)
ALTER TABLE COLLECTION ADD CONSTRAINT FK_COLLECTION_LOGO_ID FOREIGN KEY (LOGO_ID) REFERENCES BITSTREAM (ID)
ALTER TABLE item2collections ADD CONSTRAINT FK_item2collections_items_ID FOREIGN KEY (items_ID) REFERENCES ITEM (ID)
ALTER TABLE item2collections ADD CONSTRAINT FK_item2collections_collections_ID FOREIGN KEY (collections_ID) REFERENCES COLLECTION (ID)
ALTER TABLE BITSTREAM ADD CONSTRAINT FK_BITSTREAM_bitstream_format_id FOREIGN KEY (bitstream_format_id) REFERENCES bitstreamformatregistry (ID)
ALTER TABLE BITSTREAM ADD CONSTRAINT FK_BITSTREAM_FORMAT_ID FOREIGN KEY (FORMAT_ID) REFERENCES bitstreamformatregistry (ID)
ALTER TABLE BITSTREAM ADD CONSTRAINT FK_BITSTREAM_BUNDLE_ID FOREIGN KEY (BUNDLE_ID) REFERENCES BUNDLE (ID)
ALTER TABLE COMMUNITY ADD CONSTRAINT FK_COMMUNITY_LOGO_ID FOREIGN KEY (LOGO_ID) REFERENCES BITSTREAM (ID)
ALTER TABLE collection2epersongroup ADD CONSTRAINT FK_collection2epersongroup_workflowGroups_ID FOREIGN KEY (workflowGroups_ID) REFERENCES epersongroup (ID)
ALTER TABLE collection2epersongroup ADD CONSTRAINT FK_collection2epersongroup_Collection_ID FOREIGN KEY (Collection_ID) REFERENCES COLLECTION (ID)
ALTER TABLE ITEM ADD CONSTRAINT FK_ITEM_SUBMITTER_ID FOREIGN KEY (SUBMITTER_ID) REFERENCES EPERSON (ID)
ALTER TABLE ITEM ADD CONSTRAINT FK_ITEM_owning_collection_id FOREIGN KEY (owning_collection_id) REFERENCES COLLECTION (ID)
ALTER TABLE COLLECTIONMETADATA ADD CONSTRAINT FK_COLLECTIONMETADATA_COLLECTION_ID FOREIGN KEY (COLLECTION_ID) REFERENCES COLLECTION (ID)
CREATE TABLE SEQUENCE (SEQ_NAME VARCHAR(50) NOT NULL, SEQ_COUNT DECIMAL(38), PRIMARY KEY (SEQ_NAME))
INSERT INTO SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('SEQ_GEN', 1)
